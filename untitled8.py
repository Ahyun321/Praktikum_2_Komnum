# -*- coding: utf-8 -*-
"""Untitled8.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/134o0WSPyJStTUqi-V6mzWt6kAtyjmyo6
"""

import numpy as np

def f(x):
  # Masukkan fungsi yang ingin diintegrasikan di sini
  return x**2

def integrasi_trapesium(a, b, n):
  """
  Menghitung integral numerik menggunakan metode Trapesoidal.

  Args:
    a: Batas bawah integrasi.
    b: Batas atas integrasi.
    n: Jumlah interval.

  Returns:
    Perkiraan nilai integral.
  """
  h = (b - a) / n
  integral = 0.5 * f(a) + 0.5 * f(b)
  for i in range(1, n):
    integral += f(a + i * h)
  return integral * h

def integrasi_romberg(a, b, n_max):
  """
  Menghitung integral numerik menggunakan metode Romberg.

  Args:
    a: Batas bawah integrasi.
    b: Batas atas integrasi.
    n_max: Jumlah interval maksimum.

  Returns:
    Tabel hasil integrasi Romberg dan perkiraan nilai integral akhir.
  """
  R = np.zeros((n_max + 1, n_max + 1))
  for i in range(1, n_max + 1):
    h = (b - a) / (2**i)
    R[i, 0] = integrasi_trapesium(a, b, 2**i)
    for j in range(1, i + 1):
      R[i, j] = (4**j * R[i - 1, j - 1] - R[i - 1, j]) / (4**j - 1)
  return R, R[n_max, 0]

# Contoh penggunaan
a = 0
b = 1
n_max = 4

integral_romberg, integral_akhir = integrasi_romberg(a, b, n_max)

print("Tabel Integrasi Romberg:")
print(integral_romberg)
print("\nPerkiraan nilai integral:", integral_akhir)